{"mappings":"YAAAA,KAAKC,mBAAqB,CAAC,CAACC,IAAM,IAAIC,SAAW,6CAA6C,CAACD,IAAM,uDAAuDC,SAAW,6CAA6C,CAACD,IAAM,sDAAsDC,SAAW,6CAA6C,CAACD,IAAM,wDAAwDC,SAAW,8CCEnZ,IAAMC,EAAKJ,KAILK,EAAkBD,EAAGH,mBACxBK,KAAI,SAAAC,GAAC,OAAIA,EAAEJ,YACXK,KAAK,IACFC,EAAgBL,EAAGH,mBAAmBK,KAAI,SAAAC,GAAC,OAAIA,EAAEL,OAEjDQ,EAAK,WAAA,OAAMC,OAAOC,KAAKP,IAE7BD,EAAGS,iBAAiB,WAAW,SAAAC,GAE7BA,EAAGC,UACDL,IAAKM,MACH,SAAAC,GAAK,OAAIA,EAAMC,OAAOT,UAK5BL,EAAGS,iBAAiB,YAAY,SAAAC,GAC9BA,EAAGC,UACDJ,OAAOQ,OAAOH,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IACjCF,EAAKG,QAAO,SAAAC,GAAC,OAAIA,IAAMlB,KAAiBC,KACtC,SAAAiB,GAAC,OAAIZ,OAAOa,OAAOD,UAEpBP,MAAK,WAAA,OAAMZ,EAAGqB,QAAQC,eAI7BtB,EAAGS,iBAAiB,SAAS,SAAAC,GAC3BA,EAAGa,YACDhB,OAAOiB,MAAMd,EAAGe,SAASb,MAAK,SAAAc,GAAI,OAAIA,GAAQpB,IAAKM,MAAK,SAAAe,GAAC,OACvDC,MAAMlB,EAAGe,SAASb,MAAK,SAAAiB,GAAG,OAAIF,EAAEG,IAAIpB,EAAGe,QAASI,EAAIE,SAASnB,MAC3D,WAAA,OAAMiB","sources":["./precache-manifest.js","./demo/sw.ts"],"sourcesContent":[null,"/// <reference lib=\"webworker\" />\n\nconst sw = self as unknown as ServiceWorkerGlobalScope & {\n  __precacheManifest: ({ url: string, revision: string })[];\n};\n\nconst precacheVersion = sw.__precacheManifest\n  .map(p => p.revision)\n  .join('');\nconst precacheFiles = sw.__precacheManifest.map(p => p.url);\n\nconst ch = () => caches.open(precacheVersion);\n \nsw.addEventListener('install', ev => {\n  // Do not finish installing until every file in the app has been cached\n  ev.waitUntil(\n    ch().then(\n      cache => cache.addAll(precacheFiles)\n    )\n  );\n});\n \nsw.addEventListener('activate', ev => {\n  ev.waitUntil(\n    caches.keys().then(keys => Promise.all(\n      keys.filter(k => k !== precacheVersion).map(\n        k => caches.delete(k)\n      )\n    )).then(() => sw.clients.claim())\n  );\n});\n\nsw.addEventListener('fetch', ev => {\n  ev.respondWith(\n    caches.match(ev.request).then(resp => resp || ch().then(c =>\n      fetch(ev.request).then(res => c.put(ev.request, res.clone()).then(\n        () => res\n      ))\n    ))\n  )\n});"],"names":["self","__precacheManifest","url","revision","sw","precacheVersion","map","p","join","precacheFiles","ch","caches","open","addEventListener","ev","waitUntil","then","cache","addAll","keys","Promise","all","filter","k","delete","clients","claim","respondWith","match","request","resp","c","fetch","res","put","clone"],"version":3,"file":"sw.js.map"}